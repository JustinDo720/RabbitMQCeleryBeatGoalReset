"""
Django settings for jb_goal project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
from celery.schedules import crontab

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-kvbkg9pz%8=79i6w#cnu5j-x)c12w_hu@_mwu*qi=dde^iim(f'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'jb_goal_app',
    'django_celery_beat'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'jb_goal.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'jb_goal.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# PRODUCTION based schedule
# CELERY_BEAT_SCHEDULE = {
#     'reset-daily-goals': {
#         'task': 'jb_goal_app.tasks.check_goal_task',
#         'schedule': crontab(hour=0, minute=0),  # Run daily at midnight
#         'args': ('daily',),
#     },
#     'reset-weekly-goals': {
#         'task': 'jb_goal_app.tasks.check_goal_task',
#         'schedule': crontab(day_of_week=0, hour=0, minute=0),  # Run weekly on Sunday at midnight
#         'args': ('weekly',),
#     },
#     'reset-monthly-goals': {
#         'task': 'jb_goal_app.tasks.check_goal_task',
#         'schedule': crontab(day_of_month=1, hour=0, minute=0),  # Run monthly on the first day of each month at midnight
#         'args': ('monthly',),
#     },
#     'reset-yearly-goals': {
#         'task': 'jb_goal_app.tasks.check_goal_task',
#         'schedule': crontab(month_of_year=1, day_of_month=1, hour=0, minute=0),  # Run yearly on Jan 1st at midnight
#         'args': ('yearly',),
#     },
# }

# TESTING schedules (local testing)
CELERY_BEAT_SCHEDULE = {
    # Run every 10 seconds (for testing "daily" goals reset)
    'test-reset-daily-goals': {
        'task': 'jb_goal_app.tasks.check_goal_task',
        'schedule': crontab(minute="*/1"),
        'args': ('Daily',),
    },
    # Run every 30 seconds (for testing "weekly" goals reset)
    'test-reset-weekly-goals': {
        'task': 'jb_goal_app.tasks.check_goal_task',
        'schedule': crontab(minute="*/2"),
        'args': ('Weekly',),
    },
    # Run every 1 minute (for testing "monthly" goals reset)
    'test-reset-monthly-goals': {
        'task': 'jb_goal_app.tasks.check_goal_task',
        'schedule': crontab(minute="*/3"),
        'args': ('Monthly',),
    },
    # Run every 1 minute and 30 seconds (for testing "yearly" goals reset)
    'test-reset-yearly-goals': {
        'task': 'jb_goal_app.tasks.check_goal_task',
        'schedule': crontab(minute="*/4"),
        'args': ('Yearly',),
    },
}

""" crontab() Execute every minute.

crontab(minute=0, hour=0) Execute daily at midnight.

crontab(minute=0, hour='*/3') Execute every three hours: midnight, 3am, 6am, 9am, noon, 3pm, 6pm, 9pm.

crontab(minute=0, hour='0,3,6,9,12,15,18,21') Same as previous.

crontab(minute='*/15') Execute every 15 minutes.

crontab(day_of_week='sunday') Execute every minute (!) at Sundays.

crontab(minute='*', hour='*', day_of_week='sun') Same as previous.

crontab(minute='*/10', hour='3,17,22', day_of_week='thu,fri') Execute every ten minutes, but only between 3-4 am, 5-6 pm, and 10-11 pm on Thursdays or Fridays.

crontab(minute=0, hour='*/2,*/3') Execute every even hour, and every hour divisible by three. This means: at every hour except: 1am, 5am, 7am, 11am, 1pm, 5pm, 7pm, 11pm

crontab(minute=0, hour='*/5') Execute hour divisible by 5. This means that it is triggered at 3pm, not 5pm (since 3pm equals the 24-hour clock value of “15”, which is divisible by 5).

crontab(minute=0, hour='*/3,8-17') Execute every hour divisible by 3, and every hour during office hours (8am-5pm).

crontab(0, 0, day_of_month='2') Execute on the second day of every month.

crontab(0, 0, day_of_month='2-30/2') Execute on every even numbered day.

crontab(0, 0, day_of_month='1-7,15-21') Execute on the first and third weeks of the month.

crontab(0, 0, day_of_month='11', month_of_year='5') Execute on the eleventh of May every year.

crontab(0, 0, month_of_year='*/3') Execute every day on the first month of every quarter.

"""